/*!
  EhUI
  Copyright (c) Ehan Ahamed and contributors
  Licensed under the UPL-1.0 License
  https://ehui.ehan.dev/LICENSE.txt
*/

/*
min/reduced-motion utils
*/
html.min {
  scroll-behavior: auto;
}

html.min a,
html.min .a,
html.min button,
html.min .button,
html.min input[type="text"],
html.min input[type="password"],
html.min textarea,
html.min input[type="radio"],
html.min input[type="checkbox"] {
  transition-duration: 0s;
}

html.min .card.min,
.card.double.min {
  perspective: none;
}

html.min .card.double > .content,
.card.double.min > .content {
  display: block;
  transition-duration: 0s;
  transform-style: flat;
  background-color: inherit;
  border-radius: 0px;
  align-items: normal;
  justify-content: normal;
  text-align: center;
}

html.min .card.double > .content > .front,
html.min .card.double > .content > .back,
.card.double.min > .content > .front,
.card.double.min > .content > .back {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: var(--bg2);
  border-radius: 0.8rem;
  align-items: center;
  justify-content: center;
  text-align: center;
  backface-visibility: visible;
  -webkit-backface-visibility: visible;
  -moz-backface-visibility: visible;
  transform: none;
}

html.min .card.double > .content > .back,
.card.double.min > .content > .back {
  display: none;
  transform: none;
}

html.min .card.double > .content > .front,
.card.double.min > .content > .front {
  display: flex;
}

html.min .card.double.flip > .content,
.card.double.min.flip > .content {
  transform: none;
}

html.min .card.double.flip > .content > .back,
.card.double.min.flip > .content > .back {
  display: flex;
}

html.min .card.double.flip > .content > .front,
.card.double.min.flip > .content > .front {
  display: none;
}

/*
specific css-negation-stuff utils
*/
a.mark {
  color: var(--primary);
}

a.mark:hover,
a.mark:focus-visible {
  color: var(--primaryAlt);
}

/*
other utils
*/

span.red,
p.red,
b.red,
i.red,
u.red,
.text.red,
mark.red,
.mark.red,
code.red {
  color: var(--red);
}

span.redAlt,
p.redAlt,
b.redAlt,
i.redAlt,
u.redAlt,
.text.redAlt,
mark.redAlt,
.mark.redAlt,
code.redAlt {
  color: var(--redAlt);
}

span.orange,
p.orange,
b.orange,
i.orange,
u.orange,
.text.orange,
mark.orange,
.mark.orange,
code.orange {
  color: var(--orange);
}

span.orangeAlt,
p.orangeAlt,
b.orangeAlt,
i.orangeAlt,
u.orangeAlt,
.text.orangeAlt,
mark.orangeAlt,
.mark.orangeAlt,
code.orangeAlt {
  color: var(--orangeAlt);
}

span.yellow,
p.yellow,
b.yellow,
i.yellow,
u.yellow,
.text.yellow,
mark.yellow,
.mark.yellow,
code.yellow {
  color: var(--yellow);
}

span.yellowAlt,
p.yellowAlt,
b.yellowAlt,
i.yellowAlt,
u.yellowAlt,
.text.yellowAlt,
mark.yellowAlt,
.mark.yellowAlt,
code.yellowAlt {
  color: var(--yellowAlt);
}

span.green,
p.green,
b.green,
i.green,
u.green,
.text.green,
mark.green,
.mark.green,
code.green {
  color: var(--green);
}

span.greenAlt,
p.greenAlt,
b.greenAlt,
i.greenAlt,
u.greenAlt,
.text.greenAlt,
mark.greenAlt,
.mark.greenAlt,
code.greenAlt {
  color: var(--greenAlt);
}

span.blue,
p.blue,
b.blue,
i.blue,
u.blue,
.text.blue,
mark.blue .mark.blue,
code.blue {
  color: var(--blue);
}

span.blueAlt,
p.blueAlt,
b.blueAlt,
i.blueAlt,
u.blueAlt,
.text.blueAlt,
mark.blueAlt,
.mark.blueAlt code.blueAlt {
  color: var(--blueAlt);
}

span.bg3,
p.bg3,
b.bg3,
i.bg3,
u.bg3,
.text.bg3,
mark.bg3,
.mark.bg3,
code.bg3 {
  color: var(--bg3);
}

span.bg2,
p.bg2,
b.bg2,
i.bg2,
u.bg2,
.text.bg2,
mark.bg2,
.mark.bg2,
code.bg2 {
  color: var(--bg2);
}

span.bg1,
p.bg1,
b.bg1,
i.bg1,
u.bg1,
.text.bg1,
mark.bg1,
.mark.bg1,
code.bg1 {
  color: var(--bg1);
}

span.black,
p.black,
b.black,
i.black,
u.black,
.text.black,
mark.black,
.mark.black,
code.black {
  color: var(--black);
}

span.fg,
p.fg,
b.fg,
i.fg,
u.fg,
.text.fg,
mark.fg,
.mark.fg,
code.fg {
  color: var(--fg);
}

span.white,
p.white,
b.white,
i.white,
u.white,
.text.white,
mark.white,
.mark.white,
code.white {
  color: var(--white);
}

span.primary,
p.primary,
b.primary,
i.primary,
u.primary,
.text.primary,
mark.primary,
.mark.primary,
code.primary {
  color: var(--primary);
}

span.primaryAlt,
p.primaryAlt,
b.primaryAlt,
i.primaryAlt,
u.primaryAlt,
.text.primaryAlt,
mark.primaryAlt,
.mark.primaryAlt,
code.primaryAlt {
  color: var(--primaryAlt);
}

span.purple,
p.purple,
b.purple,
i.purple,
u.purple,
.text.purple,
mark.purple,
.mark.purple,
code.purple {
  color: var(--purple);
}

span.purpleAlt,
p.purpleAlt,
b.purpleAlt,
i.purpleAlt,
u.purpleAlt,
.text.purpleAlt,
mark.purpleAlt,
.mark.purpleAlt,
code.purpleAlt {
  color: var(--purpleAlt);
}

span.pink,
p.pink,
b.pink,
i.pink,
u.pink,
.text.pink,
mark.pink,
.mark.pink,
code.pink {
  color: var(--pink);
}

span.pinkAlt,
p.pinkAlt,
b.pinkAlt,
i.pinkAlt,
u.pinkAlt,
.text.pinkAlt,
mark.pinkAlt,
.mark.pinkAlt,
code.pinkAlt {
  color: var(--pinkAlt);
}

span.extra,
p.extra,
b.extra,
i.extra,
u.extra,
.text.extra,
mark.extra,
.mark.extra,
code.extra {
  color: var(--extra);
}

span.extraAlt,
p.extraAlt,
b.extraAlt,
i.extraAlt,
u.extraAlt,
.text.extraAlt,
mark.extraAlt,
.mark.extraAlt,
code.extraAlt {
  color: var(--extraAlt);
}

mark.markRed,
.mark.markRed {
  background-color: var(--red);
}

mark.markRedAlt,
.mark.markRedAlt {
  background-color: var(--redAlt);
}

mark.markOrange,
.mark.markOrange {
  background-color: var(--orange);
}

mark.markOrangeAlt,
.mark.markOrangeAlt {
  background-color: var(--orangeAlt);
}

mark.markYellow,
.mark.markYellow {
  background-color: var(--yellow);
}

mark.markYellowAlt,
.mark.markYellowAlt {
  background-color: var(--yellowAlt);
}

mark.markGreen,
.mark.markGreen {
  background-color: var(--green);
}

mark.markGreenAlt,
.mark.markGreenAlt {
  background-color: var(--greenAlt);
}

mark.markBlue,
.mark.markBlue {
  background-color: var(--blue);
}

mark.markBlueAlt,
.mark.markBlueAlt {
  background-color: var(--blueAlt);
}

mark.markBg3,
.mark.markBg3 {
  background-color: var(--bg3);
}

mark.markBg2,
.mark.markBg2 {
  background-color: var(--bg2);
}

mark.markBg1,
.mark.markBg1 {
  background-color: var(--bg1);
}

mark.markBlack,
.mark.markBlack {
  background-color: var(--black);
}

mark.markFg,
.mark.markFg {
  background-color: var(--fg);
}

mark.markWhite,
.mark.markWhite {
  background-color: var(--white);
}

mark.markPrimary,
.mark.markPrimary {
  background-color: var(--primary);
}

mark.markPrimaryAlt,
.mark.markPrimaryAlt {
  background-color: var(--primaryAlt);
}

mark.markPurple,
.mark.markPurple {
  background-color: var(--purple);
}

mark.markPurpleAlt,
.mark.markPurpleAlt {
  background-color: var(--purpleAlt);
}

mark.markPink,
.mark.markPink {
  background-color: var(--pink);
}

mark.markPinkAlt,
.mark.markPinkAlt {
  background-color: var(--pinkAlt);
}

mark.markExtra,
.mark.markExtra {
  background-color: var(--extra);
}

mark.markExtraAlt,
.mark.markExtraAlt {
  background-color: var(--extraAlt);
}

.box.red {
  color: var(--red);
  border-color: var(--red);
}

.box.green {
  color: var(--green);
  border-color: var(--green);
}

pre,
.pre {
  white-space: pre;
}

button.red,
.button.red {
  background-color: var(--red);
  border-color: var(--red);
}

button.green,
.button.green {
  background-color: var(--green);
  border-color: var(--green);
}

button.extra,
.button.extra {
  background-color: var(--extra);
  border-color: var(--extra);
  color: var(--bgExtra);
}

button.alt.red,
.button.alt.red {
  background-color: var(--bg1);
  border-color: var(--red);
  color: var(--red);
}

button.alt.green,
.button.alt.green {
  background-color: var(--bg1);
  border-color: var(--green);
  color: var(--green);
}

button.alt.extra,
.button.alt.extra {
  background-color: var(--bgExtra);
  border-color: var(--extra);
  color: var(--extra);
}

button:hover.red,
button:focus-visible.red,
.button:hover.red,
.button:focus-visible.red {
  background-color: var(--redAlt);
  color: var(--bg1);
}

button:hover.green,
button:focus-visible.green,
.button:hover.green,
.button:focus-visible.green {
  background-color: var(--greenAlt);
  color: var(--bg1);
}

button:hover.extra,
button:focus-visible.extra,
.button:hover.extra,
.button:focus-visible.extra {
  background-color: var(--extraAlt);
  color: var(--bgExtra);
}

button:focus-visible.red,
.button:focus-visible.red {
  outline-color: var(--red);
}

button:focus-visible.green,
.button:focus-visible.green {
  outline-color: var(--green);
}

button:focus-visible.extra,
.button:focus-visible.extra {
  outline-color: var(--extra);
}

input[type="text"].red,
input[type="password"].red,
textarea.red {
  border-color: var(--red);
}

input[type="text"].green,
input[type="password"].green,
textarea.green {
  border-color: var(--green);
}

input[type="text"].extra,
input[type="password"].extra,
textarea.extra {
  background-color: var(--bgExtra);
  border-color: var(--extra);
}

input[type="text"].red:hover,
input[type="text"].red:focus-visible,
input[type="password"].red:hover,
input[type="password"].red:focus-visible,
textarea.red:hover,
textarea.red:focus-visible {
  border-color: var(--redAlt);
}

input[type="text"].green:hover,
input[type="text"].green:focus-visible,
input[type="password"].green:hover,
input[type="password"].green:focus-visible,
textarea.green:hover,
textarea.green:focus-visible {
  border-color: var(--greenAlt);
}

input[type="text"].extra:hover,
input[type="text"].extra:focus-visible,
input[type="password"].extra:hover,
input[type="password"].extra:focus-visible,
textarea.extra:hover,
textarea.extra:focus-visible {
  border-color: var(--extraAlt);
}

input[type="text"].red:focus-visible,
input[type="password"].red:focus-visible,
textarea.red:focus-visible {
  outline-color: var(--red);
}

input[type="text"].green:focus-visible,
input[type="password"].green:focus-visible,
textarea.green:focus-visible {
  outline-color: var(--green);
}

input[type="text"].extra:focus-visible,
input[type="password"].extra:focus-visible,
textarea.extra:focus-visible {
  outline-color: var(--extra);
}

textarea.vertical {
  resize: vertical;
  white-space: pre;
}

textarea.horizontal {
  resize: horizontal;
  white-space: pre;
}

.hide {
  display: none;
}

.fullscreen {
  position: fixed;
  top: 0px;
  left: 0px;
  width: 100vw;
  height: 100vh;
  z-index: 200;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0px;
  background: var(--bg1);
}

.exitFullscreen {
  position: fixed;
  top: 1rem;
  left: 1rem;
  margin: 0px;
  /* hide exit button by default */
  display: none;
}

.fullscreen > button.exitFullscreen,
.fullscreen > .button.exitFullscreen {
  /* show exit button if its parent is fullscreen */
  display: inline-block;
  /* and specifically use inline block just for buttons */
}

.invisible {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: 0px;
  opacity: 0;
  overflow: hidden;
}

/* fancy stuff */
.hero > .logo::before {
  content: "";
  position: absolute;
  width: 200px;
  height: 200px;
  z-index: -100;
  background-color: var(--primary);
  opacity: 0.2;
  filter: blur(1rem);
  border-radius: 50%;
}

html.min .hero > .logo::before {
  display: none;
}

.hero > .logo > svg {
  margin-top: 0px;
}

/* temp */
.fullWidth {
  width: 100%;
}

.grid.page.extra {
  margin-top: 0px;
  margin-bottom: 0px;
  padding-bottom: 1rem;
  background-color: var(--bgExtra);
}

/* third party styling requirements */
button.g,
.button.g {
  font-family: "roboto";
  background-color: #dfdfed;
  color: #181820;
  border-color: #dfdfed;
  padding: 0.6rem 0.8rem;
  border-width: 0.4rem;
}

button.g:hover,
.button.g:hover,
button.g:focus-visible,
.button.g:focus-visible {
  color: #181820;
  background-color: #CFCFE6;
}

button.g:focus-visible,
.button.g:focus-visible {
  outline-color: #dfdfed;
}

button.g img {
  height: 1.4rem;
  width: 1.4rem;
}

button.guest,
.button.guest {
  border-width: 0.4rem;
}

button.large,
.button.large {
  padding: 0.6rem 1.2rem;
  font-size: 1.2rem;
  line-height: 1.6rem;
}
